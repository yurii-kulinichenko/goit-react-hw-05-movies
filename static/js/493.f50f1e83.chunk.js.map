{"version":3,"file":"static/js/493.f50f1e83.chunk.js","mappings":"6LAAO,IAAMA,EAAU,mCAEVC,EAAW,kC,yGCgDxB,UA7Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,uGAEdC,MAAM,sCAAD,OAC6BT,EAD7B,4BACwDF,EAAAA,EADxD,oBAGRY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJT,EAAWS,EAAKC,KACjB,IARiB,sDAUpBC,MAAM,wBAVc,uBAYpBT,GAAW,GAZS,0EAAH,qDAerBE,GACD,GAAE,CAACR,KAGF,0BACIK,IACA,wBACGF,GACCA,EAAQa,KAAI,SAAAC,GAAM,OAChB,2BACE,gBACEC,IAAG,UAAKnB,EAAAA,GAAL,OAAgBkB,EAAOE,cAC1BC,IAAI,SACJC,OAAQ,OAEV,uBAAIJ,EAAOK,SANJL,EAAOM,GADA,OAc7B,C,sBChDD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOvB,KAAKkB,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["constants.js","pages/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["export const API_KEY = 'cf063b780b2f0ffbe7e132fa53ad6a19';\n\nexport const imageURL = 'https://image.tmdb.org/t/p/w500/';\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { API_KEY, imageURL } from 'constants';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getMovieCredits = async () => {\n      try {\n        await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n        )\n          .then(response => response.json())\n          .then(data => {\n            setCredits(data.cast);\n          });\n      } catch {\n        alert('Something went wrong');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieCredits();\n  }, [movieId]);\n\n  return (\n    <div>\n      {!loading && (\n        <ul>\n          {credits &&\n            credits.map(credit => (\n              <li key={credit.id}>\n                <img\n                  src={`${imageURL}${credit.profile_path}`}\n                  alt=\"person\"\n                  height={150}\n                />\n                <p>{credit.name}</p>\n              </li>\n            ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["API_KEY","imageURL","movieId","useParams","useState","credits","setCredits","loading","setLoading","useEffect","getMovieCredits","fetch","then","response","json","data","cast","alert","map","credit","src","profile_path","alt","height","name","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}