{"version":3,"file":"static/js/888.fb015a81.chunk.js","mappings":"8PACA,EAAuB,2BAAvB,EAA2D,6BAA3D,EAAgG,4B,SC4EhG,EAtEqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MAsBjB,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8FAEdJ,GAAW,GAFG,SAGRK,MAAM,sCAAD,OAC6BX,EAD7B,oBACgDY,EAAAA,EADhD,oBAGRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAG,GACJZ,EAAQY,EACT,IATW,sDAWdC,MAAM,wBAXQ,uBAadX,GAAW,GAbG,0EAAH,qDAgBfI,GACD,GAAE,CAACV,KAGF,+BACIK,IACA,6BACE,SAAC,KAAD,CAAMa,IAAI,UAAAX,EAASY,aAAT,eAAgBC,OAAQ,IAAlC,sBACA,iBAAKC,UAAWC,EAAhB,WACE,gBACEC,IAAG,UAAKC,EAAAA,GAAL,OAAgBrB,EAAKsB,aACxBC,IAAI,SACJC,OAAQ,OAEV,iBAAKN,UAAWC,EAAhB,WACE,wBAAKnB,EAAKyB,OAASzB,EAAK0B,QACxB,wCAAgBC,KAAKC,MAA0B,GAApB5B,EAAK6B,cAAhC,QACA,sCACA,uBAAI7B,EAAK8B,YACT,oCACA,iCACG9B,EAAK+B,cADR,aACG,EAAaC,KAAI,SAAAC,GAAK,OACrB,iBAAMf,UAAWC,EAAjB,SACGc,EAAMP,MADwBO,EAAMC,GADlB,aAQ7B,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMnB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,WAMX,C,6EC3EM,IAAMN,EAAU,mCAEVY,EAAW,kC,sBCFxB,SAASc,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOlC,KAAK6B,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","constants.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MovieDetails_main__9reMT\",\"header\":\"MovieDetails_header__FB4jG\",\"genre\":\"MovieDetails_genre__cfw-I\"};","import { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\n\nimport { API_KEY, imageURL } from 'constants';\n\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState({});\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        await fetch(\n          `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n        )\n          .then(response => response.json())\n          .then(data => {\n            setFilm(data);\n          });\n      } catch {\n        alert('Something went wrong');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, [movieId]);\n\n  return (\n    <>\n      {!loading && (\n        <main>\n          <Link to={location.state?.from || '/'}>Go back</Link>\n          <div className={css.main}>\n            <img\n              src={`${imageURL}${film.poster_path}`}\n              alt=\"poster\"\n              height={300}\n            />\n            <div className={css.header}>\n              <h2>{film.title || film.name}</h2>\n              <p>User score: {Math.round(film.vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{film.overview}</p>\n              <h4>Genres</h4>\n              <p>\n                {film.genres?.map(genre => (\n                  <span className={css.genre} key={genre.id}>\n                    {genre.name}\n                  </span>\n                ))}\n              </p>\n            </div>\n          </div>\n          <div>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\">Cast</Link>\n              </li>\n              <li>\n                <Link to=\"reviews\">Reviews</Link>\n              </li>\n            </ul>\n            <Outlet />\n          </div>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","export const API_KEY = 'cf063b780b2f0ffbe7e132fa53ad6a19';\n\nexport const imageURL = 'https://image.tmdb.org/t/p/w500/';\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["movieId","useParams","useState","film","setFilm","loading","setLoading","location","useLocation","useEffect","getMovies","fetch","API_KEY","then","response","json","data","alert","to","state","from","className","css","src","imageURL","poster_path","alt","height","title","name","Math","round","vote_average","overview","genres","map","genre","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}